<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.airlift</groupId>
        <artifactId>airbase</artifactId>
        <version>101</version>
    </parent>

    <groupId>io.prestosql</groupId>
    <artifactId>presto-root</artifactId>
    <version>334-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>presto-root</name>
    <description>Presto</description>
    <url>https://prestosql.io</url>

    <inceptionYear>2012</inceptionYear>

    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git://github.com/prestosql/presto.git</connection>
        <url>https://github.com/prestosql/presto</url>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <air.main.basedir>${project.basedir}</air.main.basedir>

        <air.check.skip-spotbugs>true</air.check.skip-spotbugs>
        <air.check.skip-pmd>true</air.check.skip-pmd>
        <air.check.skip-jacoco>true</air.check.skip-jacoco>

        <project.build.targetJdk>11</project.build.targetJdk>
        <air.modernizer.java-version>8</air.modernizer.java-version>

        <dep.antlr.version>4.7.1</dep.antlr.version>
        <dep.airlift.version>0.197</dep.airlift.version>
        <dep.packaging.version>${dep.airlift.version}</dep.packaging.version>
        <dep.aws-sdk.version>1.11.749</dep.aws-sdk.version>
        <dep.okhttp.version>3.9.0</dep.okhttp.version>
        <dep.jdbi3.version>3.4.0</dep.jdbi3.version>
        <dep.drift.version>1.14</dep.drift.version>
        <dep.tempto.version>175</dep.tempto.version>
        <dep.gcs.version>2.0.0</dep.gcs.version>
        <dep.errorprone.version>2.3.4</dep.errorprone.version>
        <rubix.version>0.3.6</rubix.version>
        <presto.version>350</presto.version>

        <!--
          America/Bahia_Banderas has:
           - offset change since 1970 (offset Jan 1970: -08:00, offset Jan 2018: -06:00)
           - DST (e.g. at 2017-04-02 02:00:00 clocks turned forward 1 hour; 2017-10-29 02:00:00 clocks turned backward 1 hour)
           - has forward offset change on first day of epoch (1970-01-01 00:00:00 clocks turned forward 1 hour)
           - had forward change at midnight (1970-01-01 00:00:00 clocks turned forward 1 hour)
          -->
        <air.test.timezone>America/Bahia_Banderas</air.test.timezone>
        <air.test.parallel>methods</air.test.parallel>
        <air.test.thread-count>2</air.test.thread-count>
        <!-- Be conservative about memory allotment, because tests start background process (e.g. docker containers) -->
        <air.test.jvmsize>3g</air.test.jvmsize>

        <air.javadoc.lint>-missing</air.javadoc.lint>
    </properties>

    <modules>
        <module>presto-gateway-main</module>
        <module>presto-gateway</module>
    </modules>

    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>io.prestosql</groupId>
                <artifactId>presto-gateway-main</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.prestosql</groupId>
                <artifactId>presto-client</artifactId>
                <version>${presto.version}</version>
            </dependency>

            <dependency>
                <groupId>io.prestosql</groupId>
                <artifactId>presto-main</artifactId>
                <version>${presto.version}</version>
            </dependency>

            <dependency>
                <groupId>io.prestosql</groupId>
                <artifactId>presto-parser</artifactId>
                <version>${presto.version}</version>
            </dependency>

            <dependency>
                <groupId>io.prestosql</groupId>
                <artifactId>presto-spi</artifactId>
                <version>${presto.version}</version>
            </dependency>

            <dependency>
                <groupId>io.prestosql</groupId>
                <artifactId>presto-resource-group-managers</artifactId>
                <version>${presto.version}</version>
            </dependency>

            <dependency>
                <groupId>io.prestosql</groupId>
                <artifactId>presto-plugin-toolkit</artifactId>
                <version>${presto.version}</version>
            </dependency>

            <dependency>
                <groupId>io.prestosql</groupId>
                <artifactId>presto-tpch</artifactId>
                <version>${presto.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>io.prestosql</groupId>
                <artifactId>presto-blackhole</artifactId>
                <version>${presto.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>io.prestosql</groupId>
                <artifactId>presto-jdbc</artifactId>
                <version>${presto.version}</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.antlr</groupId>
                    <artifactId>antlr4-maven-plugin</artifactId>
                    <version>${dep.antlr.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>antlr4</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <visitor>true</visitor>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>

                <plugin>
                    <groupId>org.skife.maven</groupId>
                    <artifactId>really-executable-jar-maven-plugin</artifactId>
                    <version>1.0.5</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.8</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>1.6.0</version>
                </plugin>

                <plugin>
                    <groupId>io.airlift.maven.plugins</groupId>
                    <artifactId>sphinx-maven-plugin</artifactId>
                    <version>2.1</version>
                </plugin>

                <plugin>
                    <groupId>io.airlift.drift</groupId>
                    <artifactId>drift-maven-plugin</artifactId>
                    <version>${dep.drift.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.gaul</groupId>
                    <artifactId>modernizer-maven-plugin</artifactId>
                    <configuration>
                        <violationsFiles>
                            <violationsFile>${air.main.basedir}/src/modernizer/violations.xml</violationsFile>
                        </violationsFiles>
                        <exclusionPatterns>
                            <exclusionPattern>org/joda/time/.*</exclusionPattern>
                        </exclusionPatterns>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <configuration>
                        <rules>
                            <requireUpperBoundDeps>
                                <excludes combine.children="append">
                                    <!-- TODO: fix this in Airlift resolver -->
                                    <exclude>org.codehaus.plexus:plexus-utils</exclude>
                                    <exclude>com.google.guava:guava</exclude>
                                    <exclude>com.fasterxml.jackson.core:jackson-core</exclude>
                                    <exclude>com.google.j2objc:j2objc-annotations</exclude>
                                </excludes>
                            </requireUpperBoundDeps>
                        </rules>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <configuration>
                        <preparationGoals>clean verify -DskipTests</preparationGoals>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>ca.vanzyl.provisio.maven.plugins</groupId>
                    <artifactId>provisio-maven-plugin</artifactId>
                    <version>1.0.9</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>io.prestosql</groupId>
                <artifactId>presto-maven-plugin</artifactId>
                <version>9</version>
                <extensions>true</extensions>
            </plugin>

            <plugin>
                <groupId>ca.vanzyl.provisio.maven.plugins</groupId>
                <artifactId>provisio-maven-plugin</artifactId>
                <extensions>true</extensions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration combine.children="append">
                    <fork>false</fork>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>**/Test*.java</include>
                        <include>**/Benchmark*.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/*jmhTest*.java</exclude>
                        <exclude>**/*jmhType*.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>tests-with-dependencies</id>
            <!--
                Assembles an uber (fat) jar that includes the entire "test" scope classpath for a module.

                For example after running:

                ./mvnw clean install -P tests-with-dependencies -pl presto-geospatial

                The uber jar that contains the entire "test" scope class path of the "presto-geospatial"
                is created and placed to that modules target directory:

                ./presto-geospatial/target/presto-geospatial-0.197-SNAPSHOT-tests-with-dependencies.jar

                Now using this jar we can easily run any benchmark from that module via command line:

                java \
                  -cp ./presto-geospatial/target/presto-geospatial-*-tests-with-dependencies.jar \
                  io.prestosql.plugin.geospatial.BenchmarkSTIntersects
            -->
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptor>${air.main.basedir}/src/assembly/tests-with-dependencies.xml</descriptor>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-assembly</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>errorprone-compiler-presto</id><!-- airbase defines "errorprone-compiler" profile but set up this ourselves -->

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.8.0</version>
                        <!--suppress MavenModelInspection -->
                        <configuration combine.children="merge">
                            <fork>true</fork>
                            <compilerArgs>
                                <arg>-XDcompilePolicy=simple</arg>
                                <!-- TODO enable more checks, i.e. remove "-XepDisableAllChecks" -->
                                <arg>-Xplugin:ErrorProne -XepExcludedPaths:.*/target/generated-(|test-)sources/.* -XepDisableAllChecks -Xep:MissingOverride:ERROR -Xep:ClassCanBeStatic:ERROR -Xep:ArrayToString:ERROR -Xep:GetClassOnClass:ERROR</arg>
                            </compilerArgs>
                            <annotationProcessorPaths>
                                <path>
                                    <groupId>com.google.errorprone</groupId>
                                    <artifactId>error_prone_core</artifactId>
                                    <version>${dep.errorprone.version}</version>
                                </path>
                            </annotationProcessorPaths>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
